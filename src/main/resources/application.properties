server.port=8081
spring.mvc.view.prefix: /WEB-INF/views/
spring.mvc.view.suffix: .jsp

#Database configuration
#database.driver=com.mysql.jdbc.Driver
#database.url=jdbc:mysql://localhost:3306/admindashboarddb?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
#database.user=root
#database.password=root
#hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#hibernate.show_sql=true
#hibernate.hbm2ddl.auto=update

# Hibernate
#entitymanager.packagesToScan=com
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


#===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:mysql://localhost:3306/admindashboarddbboot
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
